package com.autonavi.aps.amapapi.utils;

import android.accounts.AccountManager;
import android.content.Context;
import android.os.Bundle;
import android.text.TextUtils;
import com.amap.api.col.3sl.hn;
import com.amap.api.col.3sl.ho;
import com.amap.api.col.3sl.hw;
import com.amap.api.col.3sl.ia;
import com.amap.api.col.3sl.ib;
import com.amap.api.col.3sl.iw;
import com.amap.api.location.AMapLocation;
import com.amap.api.location.AMapLocationClientOption;
import com.amap.api.location.DPoint;
import com.sina.weibo.sdk.constant.WBPageConstants;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import org.json.JSONObject;

/* loaded from: source-8756600-dex2jar.jar:com/autonavi/aps/amapapi/utils/b.class */
public final class b {

    /* renamed from: a  reason: collision with root package name */
    public static String f6438a = "5.3";
    static String l;
    static HashMap<String, String> m;
    public static final String[] b = {"5.1"};

    /* renamed from: c  reason: collision with root package name */
    static String f6439c = "http://apilocate.amap.com/mobile/binary";
    static String d = "http://dualstack-a.apilocate.amap.com/mobile/binary";
    static String e = "";
    private static final String[] p = {"com.amap.api.location", "com.loc", "com.amap.api.fence"};
    static String f = "11G;11K;13J;13S;15O;15U;17J;17Y;197";
    public static String g = null;
    public static String h = null;
    public static int i = 30000;
    public static String j = null;
    public static String k = null;
    private static ia q = null;
    private static boolean r = false;
    private static boolean s = false;
    static boolean n = false;
    static boolean o = false;

    public static Bundle a(AMapLocationClientOption aMapLocationClientOption) {
        Bundle bundle = new Bundle();
        AMapLocationClientOption aMapLocationClientOption2 = aMapLocationClientOption;
        if (aMapLocationClientOption == null) {
            aMapLocationClientOption2 = new AMapLocationClientOption();
        }
        try {
            bundle.putParcelable("opt", aMapLocationClientOption2);
            return bundle;
        } catch (Throwable th) {
            a(th, "CoreUtil", "getOptionBundle");
            return bundle;
        }
    }

    public static AMapLocation a(AMapLocation aMapLocation, AMapLocation aMapLocation2) {
        if (aMapLocation2 == null) {
            return aMapLocation;
        }
        try {
            aMapLocation.setCountry(aMapLocation2.getCountry());
            aMapLocation.setRoad(aMapLocation2.getRoad());
            aMapLocation.setPoiName(aMapLocation2.getPoiName());
            aMapLocation.setStreet(aMapLocation2.getStreet());
            aMapLocation.setNumber(aMapLocation2.getStreetNum());
            String cityCode = aMapLocation2.getCityCode();
            String adCode = aMapLocation2.getAdCode();
            aMapLocation.setCityCode(cityCode);
            aMapLocation.setAdCode(adCode);
            aMapLocation.setCity(aMapLocation2.getCity());
            aMapLocation.setDistrict(aMapLocation2.getDistrict());
            aMapLocation.setProvince(aMapLocation2.getProvince());
            aMapLocation.setAoiName(aMapLocation2.getAoiName());
            aMapLocation.setAddress(aMapLocation2.getAddress());
            aMapLocation.setDescription(aMapLocation2.getDescription());
            if (aMapLocation.getExtras() != null) {
                aMapLocation.getExtras().putString("citycode", aMapLocation2.getCityCode());
                aMapLocation.getExtras().putString("desc", aMapLocation2.getExtras().getString("desc"));
                aMapLocation.getExtras().putString("adcode", aMapLocation2.getAdCode());
                return aMapLocation;
            }
            Bundle bundle = new Bundle();
            bundle.putString("citycode", aMapLocation2.getCityCode());
            bundle.putString("desc", aMapLocation2.getExtras().getString("desc"));
            bundle.putString("adcode", aMapLocation2.getAdCode());
            aMapLocation.setExtras(bundle);
            return aMapLocation;
        } catch (Throwable th) {
            return aMapLocation;
        }
    }

    public static AMapLocationClientOption a(Bundle bundle) {
        AMapLocationClientOption aMapLocationClientOption = new AMapLocationClientOption();
        if (bundle == null) {
            return aMapLocationClientOption;
        }
        try {
            bundle.setClassLoader(AMapLocationClientOption.class.getClassLoader());
            return bundle.getParcelable("opt");
        } catch (Throwable th) {
            a(th, "CoreUtil", "getOptionFromBundle");
            return aMapLocationClientOption;
        }
    }

    public static String a() {
        return f6439c;
    }

    public static void a(Context context) {
        try {
            if (ib.b(context)) {
                f6439c = "http://abroad.apilocate.amap.com/mobile/binary";
                return;
            }
            f();
            String a2 = com.autonavi.aps.amapapi.security.a.a(ho.f(context));
            l = a2;
            a(a2);
        } catch (Throwable th) {
            a(th, "CoreUtil", "checkUrl");
        }
    }

    public static void a(AMapLocation aMapLocation, JSONObject jSONObject) {
        if (jSONObject != null) {
            try {
                double optDouble = jSONObject.optDouble("lat", aMapLocation.getLatitude());
                double optDouble2 = jSONObject.optDouble("lon", aMapLocation.getLongitude());
                aMapLocation.setProvider(jSONObject.optString(com.umeng.analytics.pro.d.M, aMapLocation.getProvider()));
                aMapLocation.setLatitude(optDouble);
                aMapLocation.setLongitude(optDouble2);
                aMapLocation.setAltitude(jSONObject.optDouble("altitude", aMapLocation.getAltitude()));
                try {
                    String optString = jSONObject.optString("accuracy");
                    if (!TextUtils.isEmpty(optString)) {
                        aMapLocation.setAccuracy(Float.parseFloat(optString));
                    }
                } catch (Throwable th) {
                }
                try {
                    String optString2 = jSONObject.optString("speed");
                    if (!TextUtils.isEmpty(optString2)) {
                        aMapLocation.setSpeed(Float.parseFloat(optString2));
                    }
                } catch (Throwable th2) {
                }
                try {
                    String optString3 = jSONObject.optString("bearing");
                    if (!TextUtils.isEmpty(optString3)) {
                        aMapLocation.setBearing(Float.parseFloat(optString3));
                    }
                } catch (Throwable th3) {
                }
                aMapLocation.setAdCode(jSONObject.optString("adcode", aMapLocation.getAdCode()));
                aMapLocation.setCityCode(jSONObject.optString("citycode", aMapLocation.getCityCode()));
                aMapLocation.setAddress(jSONObject.optString("address", aMapLocation.getAddress()));
                String optString4 = jSONObject.optString("desc", "");
                aMapLocation.setCountry(jSONObject.optString("country", aMapLocation.getCountry()));
                aMapLocation.setProvince(jSONObject.optString("province", aMapLocation.getProvince()));
                aMapLocation.setCity(jSONObject.optString("city", aMapLocation.getCity()));
                aMapLocation.setDistrict(jSONObject.optString("district", aMapLocation.getDistrict()));
                aMapLocation.setRoad(jSONObject.optString("road", aMapLocation.getRoad()));
                aMapLocation.setStreet(jSONObject.optString("street", aMapLocation.getStreet()));
                aMapLocation.setNumber(jSONObject.optString("number", aMapLocation.getStreetNum()));
                aMapLocation.setPoiName(jSONObject.optString(WBPageConstants.ParamKey.POINAME, aMapLocation.getPoiName()));
                aMapLocation.setAoiName(jSONObject.optString("aoiname", aMapLocation.getAoiName()));
                aMapLocation.setErrorCode(jSONObject.optInt(AccountManager.KEY_ERROR_CODE, aMapLocation.getErrorCode()));
                aMapLocation.setErrorInfo(jSONObject.optString("errorInfo", aMapLocation.getErrorInfo()));
                aMapLocation.setLocationType(jSONObject.optInt("locationType", aMapLocation.getLocationType()));
                aMapLocation.setLocationDetail(jSONObject.optString("locationDetail", aMapLocation.getLocationDetail()));
                aMapLocation.setTime(jSONObject.optLong("time", aMapLocation.getTime()));
                boolean optBoolean = jSONObject.optBoolean("isOffset", aMapLocation.isOffset());
                aMapLocation.setOffset(optBoolean);
                aMapLocation.setBuildingId(jSONObject.optString(WBPageConstants.ParamKey.POIID, aMapLocation.getBuildingId()));
                aMapLocation.setFloor(jSONObject.optString("floor", aMapLocation.getFloor()));
                aMapLocation.setDescription(jSONObject.optString("description", aMapLocation.getDescription()));
                if (jSONObject.has("coordType")) {
                    aMapLocation.setCoordType(jSONObject.optString("coordType", "GCJ02"));
                } else if (a(optDouble, optDouble2) && optBoolean) {
                    aMapLocation.setCoordType("GCJ02");
                } else {
                    aMapLocation.setCoordType("WGS84");
                }
                Bundle bundle = new Bundle();
                bundle.putString("citycode", aMapLocation.getCityCode());
                bundle.putString("desc", optString4.toString());
                bundle.putString("adcode", aMapLocation.getAdCode());
                aMapLocation.setExtras(bundle);
            } catch (Throwable th4) {
                a(th4, "CoreUtil", "transformLocation");
            }
        }
    }

    private static void a(String str) {
        if (str != null) {
            try {
                if (str.length() == 0 || m == null || !m.containsKey(str)) {
                    return;
                }
                String str2 = m.get(str);
                String str3 = null;
                if (str2 != null) {
                    str3 = null;
                    if (str2.length() > 0) {
                        str3 = new String(com.autonavi.aps.amapapi.security.a.b(b(str2), str), "utf-8");
                    }
                }
                if (str3 == null || str3.length() <= 0 || !str3.contains("http:")) {
                    return;
                }
                e = str3;
                f6439c = str3;
            } catch (Throwable th) {
                a(th, "CoreUtil", "checkUrl");
            }
        }
    }

    public static void a(Throwable th, String str, String str2) {
        if ("reportError".equals(str2) || (th instanceof hn)) {
            return;
        }
        try {
            iw.c(th, str, str2);
        } catch (Throwable th2) {
        }
    }

    public static boolean a(double d2, double d3) {
        int i2 = (int) ((d3 - 73.0d) / 0.5d);
        int i3 = (int) ((d2 - 3.5d) / 0.5d);
        if (i3 < 0 || i3 >= 101 || i2 < 0 || i2 >= 124) {
            return false;
        }
        try {
            returncharAt((i3 * 124) + i2) == '1';
        } catch (Throwable th) {
            a(th, "CoreUtil", "isChina");
            return true;
        }
    }

    private static boolean a(double d2, double d3, double d4, double d5, double d6, double d7) {
        return Math.abs(b(d2, d3, d4, d5, d6, d7)) < 1.0E-9d && (d2 - d4) * (d2 - d6) <= 0.0d && (d3 - d5) * (d3 - d7) <= 0.0d;
    }

    private static boolean a(double d2, double d3, double d4, double d5, double d6, double d7, double d8) {
        double d9 = d4 - d2;
        double d10 = d8 - d7;
        double d11 = d5 - d3;
        double d12 = 180.0d - d6;
        double d13 = (d9 * d10) - (d11 * d12);
        if (d13 != 0.0d) {
            double d14 = d3 - d7;
            double d15 = d2 - d6;
            double d16 = ((d12 * d14) - (d10 * d15)) / d13;
            double d17 = ((d14 * d9) - (d15 * d11)) / d13;
            return d16 >= 0.0d && d16 <= 1.0d && d17 >= 0.0d && d17 <= 1.0d;
        }
        return false;
    }

    public static boolean a(DPoint dPoint, List<DPoint> list) {
        double longitude = dPoint.getLongitude();
        double latitude = dPoint.getLatitude();
        double latitude2 = dPoint.getLatitude();
        if (!list.get(0).equals(list.get(list.size() - 1))) {
            list.add(list.get(0));
        }
        int i2 = 0;
        int i3 = 0;
        while (true) {
            int i4 = i3;
            if (i2 >= list.size() - 1) {
                return i4 % 2 != 0;
            }
            double longitude2 = list.get(i2).getLongitude();
            double latitude3 = list.get(i2).getLatitude();
            i2++;
            double longitude3 = list.get(i2).getLongitude();
            double latitude4 = list.get(i2).getLatitude();
            if (a(longitude, latitude, longitude2, latitude3, longitude3, latitude4)) {
                return true;
            }
            int i5 = i4;
            if (Math.abs(latitude4 - latitude3) >= 1.0E-9d) {
                if (a(longitude2, latitude3, longitude, latitude, 180.0d, latitude2)) {
                    i5 = i4;
                    if (latitude3 <= latitude4) {
                    }
                    i5 = i4 + 1;
                } else if (a(longitude3, latitude4, longitude, latitude, 180.0d, latitude2)) {
                    i5 = i4;
                    if (latitude4 <= latitude3) {
                    }
                    i5 = i4 + 1;
                } else {
                    i5 = i4;
                    if (a(longitude2, latitude3, longitude3, latitude4, longitude, latitude, latitude2)) {
                        i5 = i4 + 1;
                    }
                }
            }
            i3 = i5;
        }
    }

    private static double b(double d2, double d3, double d4, double d5, double d6, double d7) {
        return ((d4 - d2) * (d7 - d3)) - ((d6 - d2) * (d5 - d3));
    }

    public static String b() {
        return d;
    }

    public static String b(Context context) {
        return hw.b(ho.e(context));
    }

    private static byte[] b(String str) {
        if (str == null || str.length() < 2) {
            return new byte[0];
        }
        String lowerCase = str.toLowerCase(Locale.US);
        int length = lowerCase.length() / 2;
        byte[] bArr = new byte[length];
        for (int i2 = 0; i2 < length; i2++) {
            int i3 = i2 * 2;
            bArr[i2] = (byte) (i.f(lowerCase.substring(i3, i3 + 2)) & 255);
        }
        return bArr;
    }

    public static ia c() {
        try {
            if (q == null) {
                q = new ia.a("loc", "6.1.0", "AMAP_Location_SDK_Android 6.1.0").a(e()).a("6.1.0").a();
            }
        } catch (Throwable th) {
            a(th, "CoreUtil", "getSDKInfo");
        }
        return q;
    }

    public static void c(Context context) {
        try {
            if (ib.b(context)) {
                f6439c = "http://abroad.apilocate.amap.com/mobile/binary";
                d = "http://abroad.apilocate.amap.com/mobile/binary";
                return;
            }
            f6439c = "http://apilocate.amap.com/mobile/binary";
            d = "http://dualstack-a.apilocate.amap.com/mobile/binary";
        } catch (Throwable th) {
            a(th, "CoreUtil", "changeUrl");
        }
    }

    public static String d() {
        return f;
    }

    private static String[] e() {
        return (String[]) p.clone();
    }

    private static void f() {
        try {
            if (m == null) {
                m = new HashMap<>(16);
            }
            m.clear();
            m.put("fe643c382e5c3b3962141f1a2e815a78", "FB923EE67A8B4032DAA517DD8CD7A26FF7C25B0C3663F92A0B61251C4FFFA858DF169D61321C3E7919CB67DF8EFEC827");
            m.put("9a571aa113ad987d626c0457828962e6", "D2FF99A88BEB04683D89470D4FA72B1749DA456AB0D0F1A476477CE5A6874F53A9106423D905F9D808C0FCE8E7F1E04AC642F01FE41D0C7D933971F45CBA72B7");
            m.put("668319f11506def6208d6afe320dfd52", "53E53D46011A6BBAEA4FAE5442E659E0577CDD336F930C28635C322FB3F51C3C63F7FBAC9EAE448DFA2E5E5D716C4807");
        } catch (Throwable th) {
            a(th, "CoreUtil", "initUrlHash");
        }
    }
}
